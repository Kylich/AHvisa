# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys

class TestKul():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_kul(self):
    # Test name: kul
    # Step # | name | target | value | comment
    # 1 | open | https://www.vfsvisaservicesrussia.com/OnlineVAF-Finland/Applicant/Page1 |  | 
    self.driver.get("https://www.vfsvisaservicesrussia.com/OnlineVAF-Finland/Applicant/Page1")
    # 2 | setWindowSize | 923x831 |  | 
    self.driver.set_window_size(923, 831)
    # 3 | select | id=VACLocation | label=CONSULATE GENERAL OF FINLAND, ST. PETERSBURG | 
    dropdown = self.driver.find_element(By.ID, "VACLocation")
    dropdown.find_element(By.XPATH, "//option[. = 'CONSULATE GENERAL OF FINLAND, ST. PETERSBURG']").click()
    # 4 | type | id=LastName | KULIKOV | 
    self.driver.find_element(By.ID, "LastName").send_keys("KULIKOV")
    # 5 | type | id=LastNameAtBirth | KULIKOV | 
    self.driver.find_element(By.ID, "LastNameAtBirth").send_keys("KULIKOV")
    # 6 | type | id=FirstName | NIKITA | 
    self.driver.find_element(By.ID, "FirstName").send_keys("NIKITA")
    # 7 | type | id=Patronymic | SERGEEVICH | 
    self.driver.find_element(By.ID, "Patronymic").send_keys("SERGEEVICH")
    # 8 | type | id=DateOfBirth | 05/02/1988 | 
    self.driver.find_element(By.ID, "DateOfBirth").send_keys("05/02/1988")
    # 9 | type | id=PlaceOfBirth | LENINGRAD | 
    self.driver.find_element(By.ID, "PlaceOfBirth").send_keys("LENINGRAD")
    # 10 | select | id=CountryOfBirth | label=RUSSIAN FEDERATION | 
    dropdown = self.driver.find_element(By.ID, "CountryOfBirth")
    dropdown.find_element(By.XPATH, "//option[. = 'RUSSIAN FEDERATION']").click()
    # 11 | select | id=CurrentNationality | label=RUSSIAN FEDERATION | 
    dropdown = self.driver.find_element(By.ID, "CurrentNationality")
    dropdown.find_element(By.XPATH, "//option[. = 'RUSSIAN FEDERATION']").click()
    # 12 | select | id=NationalityAtBirth | label=RUSSIAN FEDERATION | 
    dropdown = self.driver.find_element(By.ID, "NationalityAtBirth")
    dropdown.find_element(By.XPATH, "//option[. = 'RUSSIAN FEDERATION']").click()
    # 13 | select | id=Gender | label=MALE | 
    dropdown = self.driver.find_element(By.ID, "Gender")
    dropdown.find_element(By.XPATH, "//option[. = 'MALE']").click()
    # 14 | select | id=MaritalStatus | label=SINGLE | 
    dropdown = self.driver.find_element(By.ID, "MaritalStatus")
    dropdown.find_element(By.XPATH, "//option[. = 'SINGLE']").click()
    # 15 | type | id=national | 714580417 | 
    self.driver.find_element(By.ID, "national").send_keys("714580417")
    # 16 | select | id=PassportTypeId | label=ALIEN'S PASSPORT | 
    dropdown = self.driver.find_element(By.ID, "PassportTypeId")
    dropdown.find_element(By.XPATH, "//option[. = 'ALIEN\'S PASSPORT']").click()
    # 17 | type | id=passport | 717580417 | 
    self.driver.find_element(By.ID, "passport").send_keys("717580417")
    # 18 | type | id=confirmpassport | 717580417 | 
    self.driver.find_element(By.ID, "confirmpassport").send_keys("717580417")
    # 19 | type | id=IssueDate | 03/02/2012 | 
    self.driver.find_element(By.ID, "IssueDate").send_keys("03/02/2012")
    # 20 | type | id=ExpiryDate | 03/02/2022 | 
    self.driver.find_element(By.ID, "ExpiryDate").send_keys("03/02/2022")
    # 21 | select | id=IssuedByCountry | label=RUSSIAN FEDERATION | 
    dropdown = self.driver.find_element(By.ID, "IssuedByCountry")
    dropdown.find_element(By.XPATH, "//option[. = 'RUSSIAN FEDERATION']").click()
    # 22 | type | id=PassportIssuedBy | FMS78036 | 
    self.driver.find_element(By.ID, "PassportIssuedBy").send_keys("FMS78036")
    # 23 | click | id=next |  | 
    self.driver.find_element(By.ID, "next").click()
    # 24 | type | id=Address | lesnoy 61/1 | 
    self.driver.find_element(By.ID, "Address").send_keys("lesnoy 61/1")
    # 25 | type | id=PostalCode | 194100 | 
    self.driver.find_element(By.ID, "PostalCode").send_keys("194100")
    # 26 | type | id=City | stpeterburg | 
    self.driver.find_element(By.ID, "City").send_keys("stpeterburg")
    # 27 | select | id=CountryId | label=RUSSIAN FEDERATION | 
    dropdown = self.driver.find_element(By.ID, "CountryId")
    dropdown.find_element(By.XPATH, "//option[. = 'RUSSIAN FEDERATION']").click()
    # 28 | type | id=ContactNumber | +79502203226 | 
    self.driver.find_element(By.ID, "ContactNumber").send_keys("+79502203226")
    # 29 | type | id=EmailId | kylikov_nikita@mail.ru | 
    self.driver.find_element(By.ID, "EmailId").send_keys("kylikov_nikita@mail.ru")
    # 30 | select | id=ddlCurrentOccupation | label=OTHERS | 
    dropdown = self.driver.find_element(By.ID, "ddlCurrentOccupation")
    dropdown.find_element(By.XPATH, "//option[. = 'OTHERS']").click()
    # 31 | type | id=OtherOccupation | MAIL | 
    self.driver.find_element(By.ID, "OtherOccupation").send_keys("MAIL")
    # 32 | type | id=txtEmployer | ExpressPost | 
    self.driver.find_element(By.ID, "txtEmployer").send_keys("ExpressPost")
    # 33 | type | id=OccupationAddress | LIGOVSKIY 50 | 
    self.driver.find_element(By.ID, "OccupationAddress").send_keys("LIGOVSKIY 50")
    # 34 | type | id=OccupationCity | stpeterburg | 
    self.driver.find_element(By.ID, "OccupationCity").send_keys("stpeterburg")
    # 35 | select | id=OccupationCountryId | label=RUSSIAN FEDERATION | 
    dropdown = self.driver.find_element(By.ID, "OccupationCountryId")
    dropdown.find_element(By.XPATH, "//option[. = 'RUSSIAN FEDERATION']").click()
    # 36 | type | id=OccupationContactNumber | 88126330225 | 
    self.driver.find_element(By.ID, "OccupationContactNumber").send_keys("88126330225")
    # 37 | click | id=next |  | 
    self.driver.find_element(By.ID, "next").click()
    # 38 | select | id=ddlMainTravelPurpose | label=TOURISM | 
    dropdown = self.driver.find_element(By.ID, "ddlMainTravelPurpose")
    dropdown.find_element(By.XPATH, "//option[. = 'TOURISM']").click()
    # 39 | select | id=ddlMainDestinationId | label=FINLAND | 
    dropdown = self.driver.find_element(By.ID, "ddlMainDestinationId")
    dropdown.find_element(By.XPATH, "//option[. = 'FINLAND']").click()
    # 40 | select | id=StateOfFirstEntry | label=FINLAND | 
    dropdown = self.driver.find_element(By.ID, "StateOfFirstEntry")
    dropdown.find_element(By.XPATH, "//option[. = 'FINLAND']").click()
    # 41 | select | id=NumberOfEntries | label=MULTI | 
    dropdown = self.driver.find_element(By.ID, "NumberOfEntries")
    dropdown.find_element(By.XPATH, "//option[. = 'MULTI']").click()
    # 42 | type | id=DurationOfIntendedStay | 30 | 
    self.driver.find_element(By.ID, "DurationOfIntendedStay").send_keys("30")
    # 43 | click | id=SchengenVisasIssuesDuringYes |  | 
    self.driver.find_element(By.ID, "SchengenVisasIssuesDuringYes").click()
    # 44 | type | id=FromDate1 | 01/06/2017 | 
    self.driver.find_element(By.ID, "FromDate1").send_keys("01/06/2017")
    # 45 | type | id=ToDate1 | 31/05/2019 | 
    self.driver.find_element(By.ID, "ToDate1").send_keys("31/05/2019")
    # 46 | click | id=FingerprintsCollectedYes |  | 
    self.driver.find_element(By.ID, "FingerprintsCollectedYes").click()
    # 47 | type | id=IntentedDateOfArrival | 01/06/2020 | 
    self.driver.find_element(By.ID, "IntentedDateOfArrival").send_keys("01/06/2020")
    # 48 | type | id=IntentedDateOfDeparture | 15/06/2020 | 
    self.driver.find_element(By.ID, "IntentedDateOfDeparture").send_keys("15/06/2020")
    # 49 | click | id=next |  | 
    self.driver.find_element(By.ID, "next").click()
    # 50 | select | id=ddlinvitingid | label=NO INVITATION | 
    dropdown = self.driver.find_element(By.ID, "ddlinvitingid")
    dropdown.find_element(By.XPATH, "//option[. = 'NO INVITATION']").click()
    # 51 | click | id=1 |  | 
    self.driver.find_element(By.ID, "1").click()
    # 52 | click | id=CASH |  | 
    self.driver.find_element(By.ID, "CASH").click()
    # 53 | click | id=rdominortru |  | 
    self.driver.find_element(By.ID, "rdominortru").click()
    # 54 | click | id=next |  | 
    self.driver.find_element(By.ID, "next").click()
    # 55 | click | name=SAVE |  | 
    self.driver.find_element(By.NAME, "SAVE").click()
    # 56 | mouseOver | id=rdbYes |  | 
    element = self.driver.find_element(By.ID, "rdbYes")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 57 | click | id=rdbYes |  | 
    self.driver.find_element(By.ID, "rdbYes").click()
    # 58 | mouseOut | id=rdbYes |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(driver)
    actions.move_to_element(element, 0, 0).perform()
    # 59 | click | id=rdbTourist |  | 
    self.driver.find_element(By.ID, "rdbTourist").click()
    # 60 | click | id=btnSubmit |  | 
    self.driver.find_element(By.ID, "btnSubmit").click()
  
